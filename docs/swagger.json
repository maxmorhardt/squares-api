{
    "swagger": "2.0",
    "info": {
        "description": "API for squares.maxstash.io",
        "title": "Squares API",
        "contact": {},
        "version": "1.0.0"
    },
    "paths": {
        "/api/contests/{id}": {
            "delete": {
                "description": "Deletes a contest by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Delete contest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contest ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contest deleted successfully"
                    },
                    "400": {
                        "description": "Invalid contest id",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Contest not found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/contests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all contests with pagination (required)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Get all contests",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 25,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Items per page (max 25)",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PaginatedContestResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new 10x10 contest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Create a new Contest",
                "parameters": [
                    {
                        "description": "Contest",
                        "name": "contest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateContestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContestSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/contests/square/{id}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the value of a specific square in a contest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Update a single square in a contest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Square ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Square",
                        "name": "square",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateSquareRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Square"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/contests/user/{username}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all contests created by a specific user with pagination (required)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Get all contests by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 25,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Items per page (max 25)",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PaginatedContestResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/contests/{id}": {
            "get": {
                "description": "Returns a single contest by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Get a contest by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contest ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContestSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the values of a contest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Update contest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contest ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContestSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/contests/{id}/randomize-labels": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Randomizes the X and Y labels for a specific contest with numbers 0-9 (no repeats)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contests"
                ],
                "summary": "Randomize contest labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contest ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContestSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns UP if service is running",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Health"
                        }
                    }
                }
            }
        },
        "/ws/contests/{contestId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Establishes a persistent WebSocket connection to receive real-time updates for a specific contest",
                "tags": [
                    "ws"
                ],
                "summary": "Connect to WebSocket for real-time contest updates",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Contest ID to listen for updates",
                        "name": "contestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection upgraded",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "invalid request"
                },
                "requestId": {
                    "type": "string",
                    "example": "7db692fa-c767-468f-af3d-9231b0f88c69"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-10-05T13:45:00Z"
                }
            }
        },
        "model.ContestSwagger": {
            "type": "object",
            "properties": {
                "awayTeam": {
                    "type": "string",
                    "example": "Away Team"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "homeTeam": {
                    "type": "string",
                    "example": "Home Team"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "My Contest"
                },
                "owner": {
                    "type": "string"
                },
                "squares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Square"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "ACTIVE"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "xLabels": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "yLabels": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.CreateContestRequest": {
            "type": "object",
            "required": [
                "name",
                "owner"
            ],
            "properties": {
                "awayTeam": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "Away Team"
                },
                "homeTeam": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "Home Team"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "example": "My Contest"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "model.Health": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "UP"
                }
            }
        },
        "model.PaginatedContestResponseSwagger": {
            "type": "object",
            "properties": {
                "contests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ContestSwagger"
                    }
                },
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrevious": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "model.Square": {
            "type": "object",
            "properties": {
                "col": {
                    "type": "integer",
                    "example": 0
                },
                "contestId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "row": {
                    "type": "integer",
                    "example": 0
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "example": "MRM"
                }
            }
        },
        "model.UpdateSquareRequest": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "maxLength": 3,
                    "example": "MRM"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}